#!/usr/bin/perl -w -I. -I..

=head1 NAME

post-article - Promote an article from the queue to the front-page.

=head1 SYNOPSIS

  post-article [options]

  General Options:
   --submission Specify the submission ID to post.

  Help Options:
   --help       Show this scripts help information.
   --manual     Read this scripts manual.
   --version    Show the version number and exit.


=head1 OPTIONS

=over 8

=item B<--help>
Show the scripts help information.

=item B<--manual>
Read the manual.

=item B<--submission>
Specify the submission number to post.

=item B<--version>
Show the version number and exit.

=back


=head1 DESCRIPTION

  This script posts an article from the submission queue to the
 front-page of the site.

=cut

=head1 TODO

  A similar script to publish a poll.

=cut

=head1 AUTHOR

 Steve
 --
 http://www.steve.org.uk/

 $Id: post-article,v 1.9 2007-02-04 16:40:32 steve Exp $

=cut


use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;
use Yawns::Submissions;


#
#  Options.
#
my %CONFIG;


#
#  Parse our command line arguments
#
parseCommandLineArguments();


if ( ! $CONFIG{'id'} )
{
    print "A submission ID is mandatory.\n";
    exit;
}


# ===========================================================================
# Post the submission.
# ===========================================================================

my $submissions = Yawns::Submissions->new();
$submissions->postArticle( $CONFIG{'id'} );



=begin doc

  Parse the arguments specified upon the command line.

=end doc

=cut

sub parseCommandLineArguments
{
    my $HELP    = 0;
    my $MANUAL  = 0;
    my $VERSION = 0;

    #
    #  Parse the options we accept
    #
    GetOptions(
               "help",         \$HELP,
               "manual",       \$MANUAL,
               "submission=s", \$CONFIG{'id'},
               "version",      \$VERSION,
             );

    pod2usage(1) if $HELP;
    pod2usage(-verbose => 2 ) if $MANUAL;

    if ( $VERSION )
    {
        my $REVISION      = '$Revision: 1.9 $';
        if ( $REVISION =~ /1.([0-9.]+) / )
        {
            $REVISION = $1;
        }

        print "CVS Revision: $REVISION\n";
        exit;
    }
}

