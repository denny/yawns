#!/usr/bin/perl -w -I../lib/ -I./lib/

=head1 NAME

suspend-user - Suspend a user from the site, with explaination.

=head1 SYNOPSIS

  suspend-user [options]

  General Options:
   --user            Specify the user to suspend.
   --reason          The reason to suspend the user.
   --delete-weblogs  Delete weblogs too; default is merely to hide them.

  Help Options:
   --help     Show this scripts help information.
   --manual   Read this scripts manual.
   --version  Show the version number and exit.


=head1 OPTIONS

=over 8

=item B<--help>
Show the scripts help information.

=item B<--manual>
Read the manual.

=item B<--reason>
Specify the reason for the suspension.

=item B<--user>
Specify the username to suspend.

=item B<--version>
Show the version number and exit.

=item B<--delete-weblogs>
With this flag specified the users' weblog entries will be removed too.  The default is merely to hide them.

=back


=head1 DESCRIPTION

  This utility allows a user to be suspended from the site, and
 all future logins from that user will be redirected to their
 user-information page which will contain the suspension notice.

  Optionally all weblog entries from the suspended user will be
 irrevocably deleted.

=cut

=head1 AUTHOR

 Steve
 --
 http://www.steve.org.uk/

 $Id: suspend-user,v 1.6 2007-02-05 06:46:44 steve Exp $

=cut

use strict;
use warnings;
use Getopt::Long;
use Pod::Usage;
use Yawns::Comments;
use Yawns::User;
use Yawns::Weblogs;


#
#  Options.
#
my %CONFIG;
$CONFIG{ 'delete-weblogs' }  = 1;
$CONFIG{ 'delete-comments' } = 1;
$CONFIG{ 'verbose' }         = 0;



#
#  Parse our command line arguments
#
parseCommandLineArguments();


#
#  Test we got the mandatory arguments.
#
if ( !$CONFIG{ 'reason' } )
{
    print "--reason argument is mandatory\n";
    exit;
}

if ( !$CONFIG{ 'user' } )
{
    print "--user argument is mandatory\n";
    exit;
}


#
#  We don't suspend ourself
#
if ( $CONFIG{'user'} =~ /^(root|steve)$/i )
{
    die "Don't suspend ourself, again.";
}

#
# Suspend the user.
#
my $u = Yawns::User->new( username => $CONFIG{ 'user' } );
$u->suspend( reason => $CONFIG{ 'reason' } );
$CONFIG{ 'verbose' } && print "User suspended\n";


#
#  If we're supposed to then delete the weblog entries this
# user has posted.
#
my $blog = Yawns::Weblogs->new( username => $CONFIG{ 'user' } );
if ( $CONFIG{ 'delete-weblogs' } )
{
    $blog->deleteByUser();
    $CONFIG{ 'verbose' } && print "Weblog entries deleted.\n";
}
else
{
    $blog->hideByUser();
    $CONFIG{ 'verbose' } && print "Weblog entries hidden.\n";
}

if ( $CONFIG{ 'delete-comments' } )
{
    my $comments = Yawns::Comments->new();
    $comments->hideByUser( username => $CONFIG{ 'user' } );
    $CONFIG{ 'verbose' } && print "Hidden comments\n";
}


#
#  All done
#
exit;




=begin doc

  Parse the arguments specified upon the command line.

=end doc

=cut

sub parseCommandLineArguments
{
    my $HELP    = 0;
    my $MANUAL  = 0;
    my $VERSION = 0;

    #
    #  Parse the options we accept
    #
    GetOptions( "help",            \$HELP,
                "manual",          \$MANUAL,
                "version",         \$VERSION,
                "user=s",          \$CONFIG{ 'user' },
                "username=s",      \$CONFIG{ 'user' },
                "reason=s",        \$CONFIG{ 'reason' },
                "verbose",         \$CONFIG{ 'verbose' },
                "delete-weblogs",  \$CONFIG{ 'delete-weblogs' },
                "delete-comments", \$CONFIG{ 'delete-comments' } );

    pod2usage(1) if $HELP;
    pod2usage( -verbose => 2 ) if $MANUAL;

    if ($VERSION)
    {
        my $REVISION = '$Revision: 1.6 $';
        if ( $REVISION =~ /1.([0-9.]+) / )
        {
            $REVISION = $1;
        }

        print "CVS Revision: $REVISION\n";
        exit;
    }
}

